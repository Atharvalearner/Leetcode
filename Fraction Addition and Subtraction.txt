class Solution {
    public String fractionAddition(String expression) {
        expression = expression.replace("-", "+-");
        String[] fractions = expression.split("\\+");
        int numerator = 0, denominator = 1;
        for(String currFrac : fractions){
            if(!currFrac.isEmpty()){
                String[] parts = currFrac.split("/");
                int num = Integer.parseInt(parts[0]);
                int den = Integer.parseInt(parts[1]);
                numerator = (numerator * den) + (num * denominator);
                denominator = denominator * den;
                int gcd = gcd(Math.abs(numerator), Math.abs(denominator));
                numerator = numerator / gcd;
                denominator = denominator / gcd;
            }
        }
        return numerator + "/" + denominator;
    }
    private int gcd(int numerator, int denominator){
        while(denominator != 0){
            int temp = denominator;
            denominator = numerator % denominator;
            numerator = temp;
        }
        return numerator;
    }
}

# Approach :
1. The problem is about evaluating a string expression containing fractions, where each fraction is either added or subtracted. The key challenge is to correctly handle the addition and subtraction of fractions with different denominators and ensure the result is in its simplest form.
2. Identify Fractions: Parse the string to extract numerators and denominators of all fractions.
3. Find a Common Denominator: To add or subtract fractions, convert them to have a common denominator.
4. Perform the Operation: Add or subtract the numerators while keeping the common denominator.
5. Simplify the Result: Reduce the resulting fraction to its simplest form by dividing both numerator and denominator by their greatest common divisor (GCD).
6. Return in Required Format: Ensure that the result is returned in the required format, even if it is a whole number.

# Complexity :
- Time : O(N)
- Space : O(1)