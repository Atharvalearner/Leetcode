class Solution {
    public List<String> braceExpansionII(String expression) {
        Set<String> s = new HashSet<>();
        Queue<String> q = new LinkedList<>();
        q.add(expression);
        while(!q.isEmpty()){
            String temp = q.poll();
            int left = -1;
            int right = 0;
            while(right < temp.length() && temp.charAt(right) != '}'){
                if(temp.charAt(right) == '{'){
                    left = right;
                }
                right++;
            }
            if(left == -1){
                s.add(temp);
                continue;
            }
            String start = temp.substring(0,left);
            String end = temp.substring(right+1,temp.length());
            String words[] = temp.substring(left+1,right).split(",");
            for(String word: words){
                q.add(new StringBuilder().append(start).append(word).append(end).toString());
            }
        }
        List<String> result = new ArrayList<>(s);
        Collections.sort(result);
        return result;
    }
}