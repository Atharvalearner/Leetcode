class Solution {
    class Node{
        Node left, right;
    }
    int size;
    long max;
    int freq = 0;
    public int countHighestScoreNodes(int[] parents) {
        this.size = parents.length;
        Node[] nodes = new Node[size];
        for(int i = 0 ; i<size ; i++){
            nodes[i] = new Node();
        }
        Node root = null;
        for(int i = 0 ; i<size ; i++){
            if(parents[i] != -1){
                Node node = nodes[parents[i]];
                if(node.left == null){
                    node.left = nodes[i];
                }else{
                    node.right = nodes[i];
                }
            }else{
                root = nodes[i];
            }
        }
        postOrder(root);
        return freq;
    }
    public long postOrder(Node root){
        if(root==null){
            return 0;
        }
        long left = postOrder(root.left);
        long right = postOrder(root.right);
        long val = Math.max(1,left) * Math.max(1,right) * Math.max(size-left-right-1,1);
        if(val > max){
            max = val;
            freq = 1;
        }else if(val == max){
            freq+=1;
        }
        return left+right+1;
    }
}