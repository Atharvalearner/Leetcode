class Solution {
    public int[][] construct2DArray(int[] original, int m, int n) {
        if (m * n != original.length) {	   // Check if the total elements in the original array match the required elements in the 2D array
            return new int[0][0];          // Return an empty 2D array if dimensions don't match
        }
        int[][] arr2D = new int[m][n];		// Initialize a 2D array with 'm' rows and 'n' columns
        for (int i = 0; i < m; i++) {       	// Fill the 2D array with elements from the 1D array
            for (int j = 0; j < n; j++) {    
                arr2D[i][j] = original[i * n + j];	// Calculate the correct index in the 1D array and assign the value to the 2D array
            }
        }
        return arr2D;
    }
}

# Complexity :
- Time : O(M * N)
- Space : O(M * N)