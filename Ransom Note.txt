class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        HashMap<Character,Integer> hm = new HashMap<>();
        for(char ch : magazine.toCharArray()){	// count character repeactations.
            hm.put(ch, hm.getOrDefault(ch,0) + 1);
        }
        for(char ch : ransomNote.toCharArray()){	// if hashmap contains key of current character of ransomNote and count of that character is greater than 0 then it will decrement the count value of that key, else it will return false.
            if(hm.containsKey(ch) && hm.get(ch) > 0){
                hm.put(ch, hm.get(ch) - 1);
            }else{
                return false;
            }
        }
        return true;
    }
}

# Complexity :
- Time : O(N + M)	// because we iterate each characters of both string.
- Space : O(N)