class Solution {
    public double findMaxAverage(int[] nums, int k) {
        int left = 0, sum = 0;
        for(int i = 0; i < k; i++){
            sum = sum + nums[i];
        }
        double max = sum;
        for(int right = k; right < nums.length; right++){
            sum = sum + nums[right] - nums[right - k];
            max = Math.max(sum,max);
        }
        return max / k;
    }
}

# Approach :
The idea is to use a sliding window technique. By using this algorithm, we avoid recalculating the sum of subarrays from scratch for each positions, allowing us to efficiently find the maximum average subarray.

# Complexity :
- Time : O(N)
- Space : O(1)