class Solution {
    public int countTriplets(int[] arr) {
        int count = 0;
        int n = arr.length;
        int[] pref = new int[n+1];
        for(int i = 0; i < n; i++){
            pref[i+1] = pref[i] ^ arr[i];
        }
        for(int i = 0; i < n; i++){
            for(int j = i + 1; j < n; j++){
                for(int k = j; k < n; k++){
                    if((pref[j] ^ pref[i]) == (pref[k+1] ^ pref[j])){
                        count++;
                    }
                }
            }
        }
        return count;
    }
}

# Explanation :
arr:        [ 2,   3,   1,   6,   7 ]
index:         0    1    2    3    4  

prefixXOR:  [ 2,   1,   0,   6,   1 ]
index:         0    1    2    3    4  

Example:
To find a = b for (i, j, k) = (0, 1, 2):

a = arr[0] ^ ... ^ arr[0] = prefixXOR[0]
b = arr[1] ^ ... ^ arr[2] = prefixXOR[2] ^ prefixXOR[0]

a == b => prefixXOR[0] == (prefixXOR[2] ^ prefixXOR[0])

# Complexity :
- Time : O(N ^ 2)
- Space : O(1)