class Solution {
    public int equalPairs(int[][] grid) {
        int count = 0;
        Map<String,Integer> hm = new HashMap<>();
        for(int i = 0; i < grid.length; i++){
            StringBuilder sb = new StringBuilder();
            for(int j = 0; j < grid[0].length; j++){
                sb.append(grid[i][j]);
                sb.append(",");
            }
            String s = sb.toString();
            hm.put(s, hm.getOrDefault(s, 0) + 1);
        }
        for(int i = 0; i < grid.length; i++){
            StringBuilder sb = new StringBuilder();
            for(int j = 0; j < grid[0].length; j++){
                sb.append(grid[j][i]);
                sb.append(",");
            }
            String s = sb.toString();
            if(hm.containsKey(s)){
                count += hm.get(s);
            }
        }
        return count;
    }
}

# Complexity :
- Time : O(N ^ 2)
- Space : O(N)