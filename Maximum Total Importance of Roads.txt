class Solution {
    public long maximumImportance(int n, int[][] roads) {
        int[] indegree = new int[n];
        for(int[] road : roads){
            indegree[road[0]]++;
            indegree[road[1]]++;
        }
        Arrays.sort(indegree);
        long sum = 0;
        for(int i = 0; i < n; i++){
            sum += (long) indegree[i] * (i + 1);
        }
        return sum;
    }
}

# Explanation :
let we have node as follows : 
Input: n = 5, roads = [[0,1],[1,2],[2,3],[0,2],[1,3],[2,4]]
- node      		    :  0 1 2 3 4
- indegree  		    :  2 3 4 2 1
- after appropriate value   :  2 4 5 3 1

according to roads we put that values.
(2+4) + (2+5) + (4+3) + (4+5) + (5+3) + (5+1)
= (5+5+5+5) + (4+4+4) + (3+3) + (2+2) + (1)
= 5 * 4 + 4 * 3 + 3 * 2 +  2 * 2 + 1 * 1
= 43

# Complexity :
- Time : O(N log N)
- Space : O(N)