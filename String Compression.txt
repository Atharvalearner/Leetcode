class Solution {
    public int compress(char[] chars) {
        StringBuilder sb = new StringBuilder();
        int count = 1, n = chars.length;
        for(int i = 0; i < n; i++){
            char curr = chars[i];
            while(i < n-1 &&  chars[i] == chars[i+1]){
                count++;
                i++;
            }
            sb.append(curr);
            if(count > 1){
                sb.append(count);
            }
            count = 1;
        }
        String res = sb.toString();
        char[] comprsd = res.toCharArray();
        for(int i = 0; i < comprsd.length; i++){
            chars[i] = comprsd[i];
        }
        return comprsd.length;
    }
}

# Approach :
We have to iterate in the given array and check if the current character is equal to the next character, if it is true then just increase the frequency by 1, else concatenate in the answer string and the frequency but keep in mind we will only concatenate the frequency in the answer string if it is greater than 1.

# Complexity :
- Time : O(N)
- Space : O(N)