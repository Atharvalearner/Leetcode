class Solution {
    public int maxVowels(String s, int k) {
        int count = 0, max = 0;
        for(int i = 0; i < s.length(); i++){
            if(isVowel(s.charAt(i))){
                count++;
            }
            if(i >= k && isVowel(s.charAt(i-k))){
                count--;
            }
            max = Math.max(max, count);
        }
        return max;
    }
    private boolean isVowel(char ch){
        if(ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u'){
            return true;
        }
        return false;
    }
}

# Approach :
1. initialize count and max as 0, where it counts vowels and maximum value respectively.
2. iterate over each character of string s.
3. if current character is vowel then increment the count.
4. if current character index is greater than sliding window size which is of length k and also contains starting point index character is vowel then decrement count.
5. update max between max and count.
6. return max.

# Complexity :
- Time : O(N)
- Space : O(1)