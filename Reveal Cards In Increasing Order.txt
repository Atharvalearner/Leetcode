class Solution {
    public int[] deckRevealedIncreasing(int[] deck) {
        Arrays.sort(deck);
        Queue<Integer> q = new LinkedList();
        for(int i = 0; i < deck.length; i++){	//add all indices of cards to queue
            q.offer(i);
        }
        
        int[] res = new int[deck.length];
        for(int i = 0; i < deck.length; i++){
            res[q.poll()] = deck[i];		//1. take top card of the deck, reveal it, and take it out of the deck and directly add it to result.
            if(!q.isEmpty()){		//2. according to the rule, put the next top card of the deck at the bottom of the deck, 
                q.offer(q.poll());
            }
        }
        return res;
    }
}

# Complexity :
- Time : O(N log N)
- Space : O(N)