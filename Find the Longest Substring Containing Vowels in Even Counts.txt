class Solution {
    public int findTheLongestSubstring(String s) {
        HashMap<String,Integer> hm = new HashMap<>();
        hm.put("00000", -1);
        int[] vowelCount = new int[5];
        int max = 0;
        for(int i = 0; i < s.length(); i++){
            char ch = s.charAt(i);
            if(ch == 'a'){
                vowelCount[0]++;
            }else if(ch == 'e'){
                vowelCount[1]++;
            }else if(ch == 'i'){
                vowelCount[2]++;
            }else if(ch == 'o'){
                vowelCount[3]++;
            }else if(ch == 'u'){
                vowelCount[4]++;
            }
            String curr = "";
            for(int count : vowelCount){
                if(count % 2 == 0){
                    curr = curr + 0;
                }else{
                    curr = curr + 1;
                }
            }
            if(hm.containsKey(curr)){
                max = Math.max(max, i - hm.get(curr));
            }else{
                hm.put(curr, i);
            }
        }
        return max;
    }
}

# Complexity : 
- Time : O(N)
- Space : O(N)